{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/verify-email/verify-email.component.css","webpack:///./src/app/user/verify-email/verify-email.component.html","webpack:///./src/app/user/verify-email/verify-email.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./todo/todo.module\": [\n\t\t\"./src/app/todo/todo.module.ts\",\n\t\t\"todo-todo-module\"\n\t],\n\t\"./user/user.module\": [\n\t\t\"./src/app/user/user.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { RouterModule ,Routes } from '@angular/router';\r\n\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\n \r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: 'user',\r\n    loadChildren: './user/user.module#UserModule',\r\n\r\n  },\r\n\r\n  {\r\n    path: 'todo',\r\n    loadChildren: './todo/todo.module#TodoModule',\r\n\r\n  },\r\n\r\n  {path : '', redirectTo:'user/login',pathMatch:'full'},\r\n\r\n  {path :'serverError', component:ServerErrorComponent},\r\n  {path :'*',component:PageNotFoundComponent},\r\n  {path :'**',component:PageNotFoundComponent},\r\n\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes) ,\r\n\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ],\r\n\r\n  declarations: [],\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ToDoApp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { UserModule } from './user/user.module'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    ServerErrorComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 7000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n    UserModule,\r\n\r\n  ],\r\n  providers: [AppService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  \r\n  public baseUrl = \"http://localhost:3000/api/v1\";\r\n \r\n  public userFriends:any = [];\r\n\r\n  constructor(private _http: HttpClient) { \r\n      //console.log(\"App Service called\")\r\n  }\r\n\r\n/* Start Functions for User Management */\r\n\r\n  public signUp(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('firstName', data.firstName)\r\n      .set('lastName', data.lastName)\r\n      .set('mobileNumber', data.mobileNumber)\r\n      .set('email', data.email)\r\n      .set('password', data.password)\r\n      .set('userName',data.userName)\r\n      .set('countryName',data.countryName)\r\n      .set('isAdmin',data.isAdmin);\r\n\r\n    return this._http.post(`${this.baseUrl}/users/signup`, params);\r\n  }//end signUp \r\n\r\n  public signIn(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('email', data.email)\r\n      .set('password', data.password)\r\n\r\n    return this._http.post(`${this.baseUrl}/users/login`, params);\r\n  }//end signIn\r\n\r\n  public resetPassword(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('email', data.email)\r\n\r\n    return this._http.post(`${this.baseUrl}/users/resetPassword`, params);\r\n  }//end resetPassword\r\n\r\n  public updatePassword(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('validationToken', data.validationToken)\r\n      .set('password', data.password)\r\n\r\n    return this._http.put(`${this.baseUrl}/users/updatePassword`, params);\r\n  }//end updatePassword\r\n\r\n  public verifyEmail(userId): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('userId', userId)\r\n\r\n    return this._http.put(`${this.baseUrl}/users/verifyEmail`, params);\r\n  }//end verifyEmail\r\n\r\n  public getCountryNames(): Observable<any> {\r\n\r\n    return this._http.get(\"./../assets/countryNames.json\");\r\n\r\n  }//end getCountryNames\r\n\r\n \r\n  public getCountryNumbers(): Observable<any> {\r\n\r\n    return this._http.get(\"./../assets/countryPhoneCodes.json\");\r\n    \r\n  }//end getCountryNumbers\r\n\r\n  public getUsers(authToken): Observable<any> {\r\n    \r\n    return this._http.get(`${this.baseUrl}/users/view/all?authToken=${authToken}`);\r\n  }//end getUsers function\r\n\r\n  public setUserInfoInLocalStorage = (data) => {\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  }//end of setlocalstorage Function\r\n\r\n  public getUserInfoFromLocalStorage: any = () => {\r\n    return JSON.parse(localStorage.getItem('userInfo'));\r\n  }//end getlocalstorage function\r\n\r\n  public logout(userId,authToken): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('authToken',authToken)\r\n\r\n    return this._http.post(`${this.baseUrl}/users/${userId}/logout`, params);\r\n  }//end deleteMeeting\r\n\r\n/* End User Management Functions */\r\n\r\n\r\n/* Start To Do Functions : Single User */\r\n\r\n  public getListDetails(listId,authToken): Observable<any> {\r\n      \r\n    return this._http.get(`${this.baseUrl}/lists/${listId}/details?authToken=${authToken}`);\r\n  }//end getListDetails function\r\n\r\n  public getItemDetails(itemId,authToken): Observable<any> {\r\n      \r\n    return this._http.get(`${this.baseUrl}/items/${itemId}/details?authToken=${authToken}`);\r\n  }//end getItemDetails function\r\n\r\n  public getSubItemDetails(data): Observable<any> {\r\n      const params = new HttpParams()\r\n        .set('subItemId', data.subItemId)  \r\n    return this._http.post(`${this.baseUrl}/items/subItems/${data.itemId}/details?authToken=${data.authToken}`,params);\r\n  }//end getSubItemDetails function\r\n\r\n  public getAllList(userId,authToken): Observable<any> {\r\n    \r\n    return this._http.get(`${this.baseUrl}/lists/view/all/lists/${userId}?authToken=${authToken}`);\r\n  }//end getAllList function\r\n\r\n  public getAllSharedList(userId,authToken): Observable<any> {\r\n    const params = new HttpParams()\r\n      .set('userId', userId)\r\n    \r\n    return this._http.post(`${this.baseUrl}/lists/view/all/shared/lists?authToken=${authToken}`,params);\r\n  }//end getAllSharedList function\r\n\r\n  public getAllItems(listId,authToken): Observable<any> {\r\n    \r\n    return this._http.get(`${this.baseUrl}/items/view/all/items/${listId}?authToken=${authToken}`);\r\n  }//end getAllItems function\r\n\r\n\r\n  public addList(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('listName', data.listName)\r\n      .set('listCreatorId', data.listCreatorId)\r\n      .set('listCreatorName', data.listCreatorName)\r\n      .set('listModifierId', data.listModifierId)\r\n      .set('listModifierName', data.listModifierName)\r\n      .set('listMode',data.listMode)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.post(`${this.baseUrl}/lists/addList`, params);\r\n  }//end addList \r\n\r\n  public addItem(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('listId', data.listId)\r\n      .set('itemName', data.itemName)\r\n      .set('itemCreatorId', data.itemCreatorId)\r\n      .set('itemCreatorName', data.itemCreatorName)\r\n      .set('itemModifierId', data.itemModifierId)\r\n      .set('itemModifierName',data.itemModifierName)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.post(`${this.baseUrl}/items/addItem`, params);\r\n  }//end addItem \r\n\r\n  public updateItem(data): Observable<any>{\r\n    const params = new HttpParams()\r\n      //.set('itemId', data.itemId)\r\n      .set('itemName', data.itemName)\r\n      .set('itemModifierId', data.itemModifierId)\r\n      .set('itemModifierName',data.itemModifierName)\r\n      .set('itemDone',data.itemDone)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.put(`${this.baseUrl}/items/${data.itemId}/updateitem`, params);\r\n  }//end updateItem \r\n\r\n  public addSubItem(data): Observable<any>{\r\n    console.log(data)\r\n    const params = new HttpParams()\r\n      //.set('itemId', data.itemId)\r\n      .set('subItemId', data.subItemId)\r\n      .set('subItemName', data.subItemName)\r\n      .set('subItemCreatorId', data.subItemCreatorId)\r\n      .set('subItemCreatorName', data.subItemCreatorName)\r\n      .set('subItemModifierId', data.subItemModifierId)\r\n      .set('subItemModifierName',data.subItemModifierName)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.put(`${this.baseUrl}/items/${data.itemId}/addSubItem`, params);\r\n  }//end addSubItem \r\n\r\n  public updateSubItem(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      //.set('itemId', data.itemId)\r\n      .set('subItemId', data.subItemId)\r\n      .set('subItemName', data.subItemName)\r\n      .set('subItemModifierId', data.subItemModifierId)\r\n      .set('subItemModifierName',data.subItemModifierName)\r\n      .set('subItemDone', data.subItemDone)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.put(`${this.baseUrl}/items/${data.itemId}/updateSubItem`, params);\r\n  }//end updateSubItem \r\n\r\n  public updateList(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      //.set('listId', data.listId)\r\n      .set('listName', data.listName)\r\n      .set('listModifierId', data.listModifierId)\r\n      .set('listModifierName', data.listModifierName)\r\n      .set('listMode', data.listMode)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.put(`${this.baseUrl}/lists/${data.listId}/updateList`, params);\r\n  }//end updateList \r\n\r\n  public deleteList(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      //.set('listId', data.listId)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.post(`${this.baseUrl}/lists/${data.listId}/delete`, params);\r\n  }//end deleteList \r\n\r\n  public deleteItem(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      //.set('itemId',data.itemId)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/items/${data.itemId}/delete`, params);\r\n  }//end deleteItem\r\n  \r\n  public deleteSubItem(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('subItemId', data.subItemId) \r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.put(`${this.baseUrl}/items/${data.itemId}/deleteSubItem`, params);\r\n  }//end deleteSubItem \r\n  \r\n\r\n\r\n  /* Friends Management */\r\n\r\n  public getAllUsers(authToken): Observable<any> {    \r\n    return this._http.get(`${this.baseUrl}/users/view/all?authToken=${authToken}`);\r\n  }//end getAllUsers function\r\n\r\n  public getUserDetails(userId,authToken): Observable<any> {    \r\n    return this._http.get(`${this.baseUrl}/users/${userId}/details?authToken=${authToken}`);\r\n  }//end getUserDetails function\r\n\r\n  public sendFriendRequest(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('senderId',data.senderId)\r\n      .set('senderName',data.senderName)\r\n      .set('recieverId',data.recieverId)\r\n      .set('recieverName',data.recieverName)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/friends/send/friend/request`, params);\r\n  }//end sendFriendRequest\r\n\r\n  public rejectFriendRequest(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('senderId',data.senderId)\r\n      .set('senderName',data.senderName)\r\n      .set('recieverId',data.recieverId)\r\n      .set('recieverName',data.recieverName)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/friends/reject/friend/request`, params);\r\n  }//end sendFriendRequest\r\n\r\n  public cancelFriendRequest(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('senderId',data.senderId)\r\n      .set('senderName',data.senderName)\r\n      .set('recieverId',data.recieverId)\r\n      .set('recieverName',data.recieverName)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/friends/cancel/friend/request`, params);\r\n  }//end sendFriendRequest\r\n\r\n  public acceptFriendRequest(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('senderId',data.senderId)\r\n      .set('senderName',data.senderName)\r\n      .set('recieverId',data.recieverId)\r\n      .set('recieverName',data.recieverName)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/friends/accept/friend/request`, params);\r\n  }//end sendFriendRequest\r\n\r\n  public unfriendUser(data): Observable<any>{\r\n\r\n    const params = new HttpParams()\r\n      .set('senderId',data.senderId)\r\n      .set('senderName',data.senderName)\r\n      .set('recieverId',data.recieverId)\r\n      .set('recieverName',data.recieverName)\r\n      .set('authToken',data.authToken)\r\n      \r\n\r\n    return this._http.post(`${this.baseUrl}/friends/unfriend/user`, params);\r\n  }//end sendFriendRequest\r\n\r\n  /* History Management */\r\n\r\n  public addHistory(data): Observable<any>{\r\n    \r\n    const params = new HttpParams()\r\n      .set('listId', data.listId)\r\n      .set('key', data.key)\r\n      .set('itemId', data.itemId)\r\n      .set('subItemId', data.subItemId)\r\n      .set('authToken',data.authToken)\r\n      \r\n    return this._http.post(`${this.baseUrl}/history/addHistory`, params);\r\n  }//end addItem \r\n  \r\n  public getHistory(data): Observable<any>{\r\n    \r\n    const params = new HttpParams()\r\n      .set('listId', data.listId)\r\n      .set('authToken',data.authToken)\r\n\r\n    return this._http.post(`${this.baseUrl}/history/deleteHistory`, params);\r\n  }//end addItem \r\n\r\n}\r\n","module.exports = \".cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n  <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 user-board-wrap\\\">\\r\\n    <div class=\\\"d-flex align-items-center\\\">\\r\\n      <div class=\\\"error-text\\\">\\r\\n        <h1>>Error <span class=\\\"errorcode\\\">404</span></h1>\\r\\n        <p class=\\\"output\\\">\\r\\n          > The page you are looking for might have been removed, had its name changed or is temporarily\\r\\n          unavailable.</p>\\r\\n        <p class=\\\"output\\\">\\r\\n          > Please try to <a href=\\\"#1\\\">[go back]</a> or <a href=\\\"#2\\\">[return to the homepage]</a>.\\r\\n        </p>  \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n//Location services\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  public goBack = (): any => {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n ","module.exports = \".cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.icons{\\r\\n    color:lightblue;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 user-board-wrap\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"error-text\\\">\\r\\n          <h1>>Error <span class=\\\"errorcode\\\">500</span></h1>\\r\\n          <p class=\\\"output\\\">\\r\\n            > Something went wrong!!</p>\\r\\n          <p class=\\\"output\\\">\\r\\n            > Please try to <a href=\\\"#1\\\">[go back]</a> or <a href=\\\"#2\\\">[return to the homepage]</a>.\\r\\n          </p>  \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  constructor(\r\n    public router: Router,\r\n\r\n  ) { }\r\n\r\n  public goToSignIn(): any {\r\n    this.router.navigate(['/user/login']);\r\n  }//end of goToSign function\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"body, html {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.bg-image { \\r\\n  /* The image used */\\r\\n  background-image: url('background-image.jpg');\\r\\n\\r\\n  /* Full height */\\r\\n  height: 100vh; \\r\\n\\r\\n  /* Center and scale the image nicely */\\r\\n  background-position: center;\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n\\r\\n.form-field-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n\\r\\n.form-field-container > * {\\r\\n    width: 80%;\\r\\n    margin-left:3vw; \\r\\n  }\\r\\n\\r\\n\\r\\n.cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #48CDC8, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n   \"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"user-content-wrap col-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n            <div class=\\\"user-content-inner-wrap\\\">\\r\\n                <img src=\\\"./../../../assets/images/todoapplogo.png\\\" alt=\\\"TodoApp Logo\\\" />\\r\\n                <p>\\r\\n                        ToDo App is an intuitive and easy to use online Todo list.\\r\\n                        It helps you to get organized,  \\r\\n                        simplify your life,\\r\\n                        and to get things done. Create todo lists,\\r\\n                        and manage them online from anywhere.\\r\\n    \\r\\n                    </p>  \\r\\n                    <h5>Recover your password  for ToDO List management system</h5>\\r\\n                    <ul>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Create a ToDo List</li>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Add, delete and edit items</li>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Add sub-todo-items</li>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Add Friends</li>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Save & Share Todo List</li>\\r\\n                        <li><span class=\\\"fa fa-check-circle\\\"></span>Notifications</li>\\r\\n                    </ul>  \\r\\n    \\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 user-board-wrap\\\">\\r\\n            <div class=\\\"card border-success cardBorder\\\">\\r\\n\\r\\n                <div class=\\\"card-body text-center\\\">\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <h2>Forgot Password!</h2>\\r\\n                    </div>\\r\\n\\r\\n                    <form class=\\\"form-horizontal\\\" role=\\\"form\\\" #forgotForm=\\\"ngForm\\\">\\r\\n\\r\\n                        <div class=\\\"input-group form-field-container\\\">\\r\\n\\r\\n                            <mat-form-field appearance=\\\"standard\\\">\\r\\n                                <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\r\\n                                <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-12 controls\\\">\\r\\n                            <button id=\\\"btn-send\\\" type=\\\"button\\\" class=\\\"button btn btn-primary\\\"\\r\\n                                (click)=\\\"forgotPasswordFunction()\\\" [disabled]=\\\"!forgotForm.valid\\\">\\r\\n                                <span>Send</span>\\r\\n                            </button>\\r\\n                        </div>   \\r\\n                        <div class=\\\"links-wrap\\\">\\r\\n                            <a mat-raised-link [routerLink]=\\\"['/user/login']\\\">Have account? Sign\\r\\n                                In</a>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { AppService } from '../../app.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  constructor(\r\n    public appService: AppService,\r\n    public _route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastr: ToastrService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n      this.email.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  public forgotPasswordFunction(): any {\r\n\r\n    if (!this.email.value) {\r\n      this.toastr.warning(\"Email is required\", \"Warning!\");\r\n    }\r\n    else if(this.email.hasError('email')){\r\n      this.toastr.warning(\"Not a valid email\", \"Warning!\");\r\n\r\n    }\r\n    else {\r\n      let data = {\r\n        email: this.email.value,\r\n      }\r\n\r\n      //console.log(data)  \r\n      this.appService.resetPassword(data).subscribe((apiResponse) => {\r\n\r\n          if (apiResponse.status == 200) {\r\n            this.toastr.success(\"Reset Password\", \"Password reset instructions sent successfully\");\r\n\r\n          }\r\n          else {\r\n            this.toastr.error(apiResponse.message, \"Error!\");\r\n          }\r\n        },\r\n          (error) => {\r\n            if(error.status == 404){\r\n              this.toastr.warning(\"Reset Password Failed\", \"Email Not Found!\");\r\n            }\r\n            else{\r\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\r\n              this.router.navigate(['/serverError']);\r\n  \r\n            }\r\n              \r\n          });//end calling resetPassword\r\n    }\r\n  }//end forgotPasswordFunction\r\n\r\n}\r\n","module.exports = \"body, html {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.bg-image { \\r\\n  /* The image used */\\r\\n \\r\\n\\r\\n  /* Full height */\\r\\n  height: 100vh; \\r\\n\\r\\n \\r\\n}\\r\\n\\r\\n\\r\\n.form-field-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n\\r\\n/* Media Query for 320px - 454px Devices*/\\r\\n\\r\\n\\r\\n@media only screen and (min-width:300px) and (max-width:454px){\\r\\n    .bg-container {\\r\\n        margin-top: 5vh;\\r\\n        margin-right: 5vw;        \\r\\n        max-width: 250px;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n/* Media Query for 455px - 768px Devices*/\\r\\n\\r\\n\\r\\n@media only screen and (min-width:455px) and (max-width:768px) {\\r\\n    .icons {\\r\\n      font-size: 2.5em;\\r\\n    }\\r\\n    .nav-item{\\r\\n      margin-left: 1vw;\\r\\n      margin-right: 1vw;\\r\\n    }\\r\\n   \\r\\n  }\\r\\n\\r\\n\\r\\n/* Media Query for 769px - 992px Devices*/\\r\\n\\r\\n\\r\\n@media only screen and (min-width:769px) and (max-width:992px) {\\r\\n    .icons {\\r\\n      font-size: 3em;\\r\\n    }\\r\\n    .nav-item{\\r\\n      margin-left: 2vw;\\r\\n      margin-right: 2vw;\\r\\n    }\\r\\n   \\r\\n  }\\r\\n\\r\\n\\r\\n/* Media Query for 993px - 1169px Devices*/\\r\\n\\r\\n\\r\\n@media only screen and (min-width:993px) and (max-width:1169px) {\\r\\n    .icons {\\r\\n      font-size: 3.5em;\\r\\n    }\\r\\n    .nav-item{\\r\\n      margin-left: 4vw;\\r\\n      margin-right: 4vw;\\r\\n    }\\r\\n   \\r\\n  }\\r\\n\\r\\n\\r\\n/* Media Query above 1170px Devices*/\\r\\n\\r\\n\\r\\n@media only screen and (min-width:1170px)  {\\r\\n    .icons {\\r\\n      font-size: 3.8em;\\r\\n    }\\r\\n  \\r\\n    .nav-item{\\r\\n      margin-left: 3.8vw;\\r\\n      margin-right: 3.8vw;\\r\\n    }\\r\\n   \\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"user-content-wrap col-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n            <div class=\\\"user-content-inner-wrap\\\">\\r\\n                <img src=\\\"./../../../assets/images/todoapplogo.png\\\" alt=\\\"TodoApp Logo\\\" />\\r\\n                <p>\\r\\n                    ToDo App is an intuitive and easy to use online Todo list.\\r\\n                    It helps you to get organized,  \\r\\n                    simplify your life,\\r\\n                    and to get things done. Create todo lists,\\r\\n                    and manage them online from anywhere.\\r\\n\\r\\n                </p>  \\r\\n                <h5>Signin for ToDO List management system</h5>\\r\\n                <ul>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Create a ToDo List</li>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Add, delete and edit items</li>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Add sub-todo-items</li>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Add Friends</li>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Save & Share Todo List</li>\\r\\n                    <li><span class=\\\"fa fa-check-circle\\\"></span>Notifications</li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 user-board-wrap\\\">\\r\\n            <div class=\\\"card border-success cardBorder\\\">\\r\\n\\r\\n                <div class=\\\"card-body text-center\\\">\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <h2>Sign in!</h2>\\r\\n                    </div>\\r\\n\\r\\n                    <form id=\\\"loginform\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\" #loginForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"input-group  form-field-container\\\">\\r\\n                            <mat-form-field appearance=\\\"standard\\\">\\r\\n                                <input matInput placeholder=\\\"Email Id\\\" [formControl]=\\\"email\\\" required>\\r\\n                                <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}\\r\\n                                </mat-error>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"input-group form-field-container\\\">\\r\\n                            <mat-form-field appearance=\\\"standard\\\">\\r\\n                                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"8\\\" #pwd=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"password\\\" name=\\\"password\\\" (keydown)=\\\"loginUsingKeypress($event)\\\"\\r\\n                                    required>\\r\\n                                <mat-hint>* Minimun 8 Characters</mat-hint>\\r\\n\\r\\n                                <mat-error *ngIf=\\\"pwd.errors?.required\\\">required</mat-error>\\r\\n                                <mat-error *ngIf=\\\"pwd.errors?.minlength\\\">Minimun 8 Characters Reuired</mat-error>\\r\\n\\r\\n                            </mat-form-field>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <button id=\\\"btn-signin\\\" type=\\\"button\\\" class=\\\"button btn btn-primary\\\"\\r\\n                                    (click)=\\\"signInFunction()\\\" [disabled]=\\\"!loginForm.valid\\\">\\r\\n                                    <span> Sign In</span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"links-wrap\\\">\\r\\n                            <a mat-raised-link [routerLink]=\\\"['/user/forgot-password']\\\">Forgot\\r\\n                                password?</a>\\r\\n                            <a mat-raised-link [routerLink]=\\\"['/user/signup']\\\">Sign Up</a>\\r\\n\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { AppService } from '../../app.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  public password: any;\r\n\r\n  constructor(\r\n    public appService: AppService,\r\n    public _route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastr: ToastrService,\r\n\r\n  ) { }\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n      this.email.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  public signInFunction(): any {\r\n\r\n    if (!this.email.value) {\r\n      this.toastr.warning(\"Email is required\", \"Warning!\");\r\n    }\r\n    else if(this.email.hasError('email')){\r\n      this.toastr.warning(\"Not a valid email\", \"Warning!\");\r\n\r\n    }\r\n    else if (!this.password) {\r\n      this.toastr.warning(\"Password is required\", \"Warning!\");\r\n    }\r\n    else {\r\n      let data = {\r\n        email: this.email.value,\r\n        password: this.password,\r\n      }\r\n\r\n      //console.log(data)  \r\n      this.appService.signIn(data).subscribe((apiResponse) => {\r\n\r\n          if (apiResponse.status == 200) {\r\n            this.toastr.success(\"Login Successfull\", \"Welcome to Todo\");\r\n            //console.log(apiResponse.data)\r\n            \r\n            Cookie.set('authToken', apiResponse.data.authToken);\r\n            Cookie.set('userId', apiResponse.data.userDetails.userId);\r\n            Cookie.set('userName', `${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}`);\r\n            this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails);\r\n\r\n            setTimeout(() => {\r\n              this.router.navigate(['/todo/single-user']);//redirects the single user platform.\r\n            }, 1000);\r\n  \r\n          }\r\n          else {\r\n            this.toastr.error(apiResponse.message, \"Error!\");\r\n          }\r\n        },\r\n          (error) => {\r\n            \r\n            if(error.status == 404){\r\n              this.toastr.warning(\"Login Failed\", \"User Not Found or Email is not verified!\");\r\n            }\r\n            else if(error.status == 400){\r\n              this.toastr.warning(\"Login Failed\", \"Wrong Password\");\r\n            }\r\n            else{\r\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\r\n              this.router.navigate(['/serverError']);\r\n  \r\n            }\r\n              \r\n          });//end calling SignInFunction\r\n    }\r\n  }//end signInFunction\r\n\r\n  public loginUsingKeypress: any = (event: any) => {\r\n\r\n    if (event.keyCode === 13) { \r\n      // 13 is keycode of enter.\r\n      this.signInFunction();\r\n    }\r\n\r\n  } // end loginUsingKeypress\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"body, html {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .bg-image { \\r\\n    /* The image used */\\r\\n    background-image: url('background-image.jpg');\\r\\n  \\r\\n    /* Full height */\\r\\n    height: 100vh; \\r\\n  \\r\\n    /* Center and scale the image nicely */\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .cardBorder{\\r\\n      box-shadow: 0 4px 8px 0 #48CDC8, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .form-field-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .form-field-container > * {\\r\\n    width: 80%;\\r\\n    margin-left:3vw; \\r\\n  }\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n\"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"user-content-wrap col-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"user-content-inner-wrap\\\">\\r\\n        <img src=\\\"./../../../assets/images/todoapplogo.png\\\" alt=\\\"TodoApp Logo\\\" />\\r\\n        <p>\\r\\n          lorem ispsm lorem ispsm lorem ispsm lorem\\r\\n          ispsm lorem ispsm lorem ispsmlorem ispsmlorem ispsm\\r\\n          lorem ispsm lorem ispsm lorem ispsm lorem ispsm lorem ispsm\\r\\n          lorem ispsmlorem ispsmlorem ispsm\\r\\n\\r\\n        </p>\\r\\n        <ul>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n          <li>lorem ispsm lorem ispsm</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 user-board-wrap\\\">\\r\\n      <div class=\\\"card border-success cardBorder\\\">\\r\\n\\r\\n        <div class=\\\"card-body text-center\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <h2>Reset Password!</h2>\\r\\n          </div>\\r\\n\\r\\n          <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n            <div class=\\\"input-group mb-3 form-field-container\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"standard\\\">\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Enter your Password\\\" minlength=\\\"8\\\" #pwd=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\r\\n                <mat-hint>* Min 8 Characters</mat-hint>\\r\\n\\r\\n                <mat-error *ngIf=\\\"pwd.errors?.required\\\">You must enter a value</mat-error>\\r\\n                <mat-error *ngIf=\\\"pwd.errors?.minlength\\\">You must enter atleast 8 Chars</mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"input-group mb-3 form-field-container\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"standard\\\">\\r\\n                <mat-label>Re-enter Password</mat-label>\\r\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Re-enter your Password\\\" minlength=\\\"8\\\" #conpwd=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" required>\\r\\n                <mat-hint>* Min 8 Characters</mat-hint>\\r\\n\\r\\n                <mat-error *ngIf=\\\"conpwd.errors?.required\\\">You must enter a value</mat-error>\\r\\n                <mat-error *ngIf=\\\"conpwd.errors?.minlength\\\">You must enter atleast 8 Chars</mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div style=\\\"margin-top:10px\\\" class=\\\"form-group\\\">\\r\\n              <!-- Button -->\\r\\n\\r\\n              <div class=\\\"col-sm-12 controls\\\">\\r\\n                <button id=\\\"btn-save\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updatePasswordFunction()\\\">\\r\\n                  <i class=\\\"icon-hand-right\\\"></i> Save</button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n//import for toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n//for Service\r\nimport { AppService } from '../../app.service';\r\n//for routing\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  public validationToken: any;\r\n  public password: any;\r\n  public confirmPassword: any;\r\n\r\n  constructor(\r\n    public appService: AppService,\r\n    public _route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.validationToken = this._route.snapshot.paramMap.get('validationToken');\r\n\r\n  }\r\n\r\n  public goToSignIn(): any {\r\n    this.router.navigate(['/user/login']);\r\n  }//end of goToSign function\r\n\r\n  public updatePasswordFunction(): any {\r\n    if (this.password != this.confirmPassword) {\r\n      this.toastr.warning(\"Password doesn't match\", \"Warning!\");\r\n    }\r\n    else {\r\n      let data = {\r\n        validationToken: this.validationToken,\r\n        password: this.password,\r\n      }\r\n\r\n      this.appService.updatePassword(data).subscribe((apiResponse) => {\r\n\r\n        if (apiResponse.status == 200) {\r\n          this.toastr.success(\"Please login\", \"Password Updated!\");\r\n          setTimeout(() => {\r\n            this.goToSignIn();\r\n          }, 1000);//redirecting to signIn page\r\n\r\n        }\r\n        else {\r\n          this.toastr.error(apiResponse.message, \"Error!\");\r\n        }\r\n      },\r\n        (error) => {\r\n          if (error.status == 404) {\r\n            this.toastr.warning(\"Password Update failed\", \"Please request another password reset!\");\r\n          }\r\n          else {\r\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\r\n            this.router.navigate(['/serverError']);\r\n\r\n          }\r\n\r\n        });//end calling updatePassword\r\n\r\n    }\r\n\r\n  }//end updatePasswordFunction\r\n\r\n}\r\n","module.exports = \"body, html {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .bg-image { \\r\\n    /* The image used */\\r\\n    background-image: url('background-image.jpg');\\r\\n  \\r\\n    /* Full height */\\r\\n    height: 100vh; \\r\\n  \\r\\n    /* Center and scale the image nicely */\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n  \\r\\n  \\r\\n  .form-field-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .form-field-container > * {\\r\\n    width: 80%;\\r\\n    margin-left:3vw; \\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"main-wrapper\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"user-content-wrap col-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"user-content-inner-wrap\\\">\\r\\n        <img src=\\\"./../../../assets/images/todoapplogo.png\\\" alt=\\\"TodoApp Logo\\\" />\\r\\n        <p>\\r\\n          ToDo App is an intuitive and easy to use online Todo list.\\r\\n          It helps you to get organized,\\r\\n          simplify your life,\\r\\n          and to get things done. Create todo lists,\\r\\n          and manage them online from anywhere.\\r\\n          \\r\\n        </p>\\r\\n        <h5>Signup for ToDO List management system</h5>\\r\\n        <ul>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Create a ToDo List</li>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Add, delete and edit items</li>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Add sub-todo-items</li>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Add Friends</li>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Save & Share Todo List</li>\\r\\n          <li><span class=\\\"fa fa-check-circle\\\"></span>Notifications</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 user-board-wrap\\\">\\r\\n      <div class=\\\"card border-success cardBorder\\\">\\r\\n\\r\\n        <div class=\\\"card-body text-center\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <h2>Sign up!</h2>\\r\\n          </div>\\r\\n\\r\\n          <form id=\\\"signupform\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\" #signupForm=\\\"ngForm\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6 pr-0\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-group form-field-container\\\">\\r\\n\\r\\n                    <mat-form-field appearance=\\\"standard\\\">\\r\\n                      <input matInput placeholder=\\\"First Name\\\" minlength=\\\"3\\\" #fstName=\\\"ngModel\\\" [(ngModel)]=\\\"firstName\\\"\\r\\n                        name=\\\"firstName\\\" required>\\r\\n                      <mat-hint>* Min 3 Characters</mat-hint>\\r\\n                      <mat-error *ngIf=\\\"fstName.errors?.required\\\">You must enter a value</mat-error>\\r\\n                      <mat-error *ngIf=\\\"fstName.errors?.minlength\\\">You must enter atleast 3 Chars</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-group form-field-container\\\">\\r\\n                    <mat-form-field appearance=\\\"standard\\\">\\r\\n\\r\\n                      <input matInput placeholder=\\\"Last Name\\\" minlength=\\\"3\\\" #lstName=\\\"ngModel\\\" [(ngModel)]=\\\"lastName\\\"\\r\\n                        name=\\\"lastName\\\" required>\\r\\n                      <mat-hint>* Min 3 Characters</mat-hint>\\r\\n\\r\\n                      <mat-error *ngIf=\\\"lstName.errors?.required\\\">You must enter a value</mat-error>\\r\\n                      <mat-error *ngIf=\\\"lstName.errors?.minlength\\\">You must enter atleast 3 Chars</mat-error>\\r\\n\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-group form-field-container\\\">\\r\\n                    <mat-form-field appearance=\\\"standard\\\">\\r\\n                      <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\r\\n                      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-group form-field-container\\\">\\r\\n                    <mat-form-field appearance=\\\"standard\\\">\\r\\n                      <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"8\\\" #pwd=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\r\\n                      <mat-hint>* Min 8 Characters</mat-hint>\\r\\n\\r\\n                      <mat-error *ngIf=\\\"pwd.errors?.required\\\">You must enter a value</mat-error>\\r\\n                      <mat-error *ngIf=\\\"pwd.errors?.minlength\\\">You must enter atleast 8 Chars</mat-error>\\r\\n\\r\\n                    </mat-form-field>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n                <div class=\\\"form-group form-field-container\\\">\\r\\n                  <mat-form-field appearance=\\\"standard\\\">\\r\\n                    <mat-select placeholder=\\\"Select Country Name\\\" [(value)]=\\\"country\\\"\\r\\n                      (selectionChange)=\\\"onChangeOfCountry()\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.code\\\">{{country.name}}</mat-option>\\r\\n                    </mat-select>\\r\\n\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n                <div class=\\\"form-group form-field-container\\\">\\r\\n                  <mat-form-field appearance=\\\"standard\\\">\\r\\n                    <input matInput placeholder=\\\"Mobile Number\\\" type=\\\"number\\\" class=\\\"example-right-align\\\"\\r\\n                      [(ngModel)]=\\\"mobileNumber\\\" name=\\\"mobileNumber\\\" pattern=\\\"^\\\\d{10}$\\\" maxlength=\\\"10\\\"\\r\\n                      #mobNumber=\\\"ngModel\\\" required>\\r\\n\\r\\n                    <span matPrefix>+{{countryCode}} &nbsp;</span>\\r\\n\\r\\n\\r\\n                    <mat-hint>* Max 10 Digits</mat-hint>\\r\\n\\r\\n                    <mat-error *ngIf=\\\"mobNumber.errors?.required\\\">You must enter a value</mat-error>\\r\\n                    <mat-error *ngIf=\\\"mobNumber.errors?.pattern\\\">Only 10 Digits</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group text-center\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <button id=\\\"btn-signup\\\" type=\\\"button\\\" class=\\\"button btn btn-primary\\\" (click)=\\\"signupFunction()\\\"\\r\\n                  [disabled]=\\\"!signupForm.valid\\\">\\r\\n                  <span>Sign Up</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"links-wrap\\\">\\r\\n              <a mat-raised-link [routerLink]=\\\"['/user/login']\\\">Have account? Sign\\r\\n                In</a>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { AppService } from '../../app.service';\r\n//import for toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n//import for Routing\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent implements OnInit {\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  public firstName: any;\r\n  public lastName: any;\r\n  public password: any;\r\n  public country: any;\r\n  public mobileNumber: any;\r\n\r\n  public allCountries: any;\r\n  public countryCode: string;\r\n  public countryName: string;\r\n  public countries: any[] = [];\r\n  public countryCodes: string[];\r\n\r\n\r\n  constructor(\r\n    public appService: AppService,\r\n    public _route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastr: ToastrService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getCountries();\r\n    this.getCountryCodes();\r\n  }\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n      this.email.hasError('email') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n  public onChangeOfCountry() {\r\n    this.countryCode = this.countryCodes[this.country];\r\n    this.countryName = this.country\r\n  }//end onChangeOfCountry\r\n\r\n  public getCountries() {\r\n    this.appService.getCountryNames().subscribe((data) => {\r\n        this.allCountries = data;\r\n        for (let i in data) {\r\n\r\n          let singleCountry = {\r\n            name: data[i],\r\n            code: i\r\n          }\r\n          this.countries.push(singleCountry);\r\n        }\r\n        this.countries = this.countries.sort((first, second) => {\r\n          return first.name.toUpperCase() < second.name.toUpperCase() ? -1 : (first.name.toUpperCase() > second.name.toUpperCase() ? 1 : 0);\r\n        });//end sort\r\n      })//end subscribe\r\n\r\n  }//end getCountries\r\n\r\n  public getCountryCodes() {\r\n    this.appService.getCountryNumbers()\r\n      .subscribe((data) => {\r\n        this.countryCodes = data;\r\n      })//end subscribe\r\n  }//end getCountriesCodes\r\n\r\n  public goToSignIn(): any {\r\n    this.router.navigate(['/user/login']);\r\n  }//end of goToSign function\r\n\r\n  public signupFunction(): any {\r\n\r\n    if (!this.firstName) {\r\n      this.toastr.warning(\"First Name is required\", \"Warning!\");\r\n    }\r\n    else if (!this.lastName) {\r\n      this.toastr.warning(\"Last Name is required\", \"Warning!\");\r\n    }\r\n    else if (!this.mobileNumber) {\r\n      this.toastr.warning(\"Mobile Number is required\", \"Warning!\");\r\n    }\r\n    else if (!this.country) {\r\n      this.toastr.warning(\"Country is required\", \"Warning!\");\r\n    }\r\n    else if (!this.email.value) {\r\n      this.toastr.warning(\"Email is required\", \"Warning!\");\r\n    }\r\n    else if (!this.password) {\r\n      this.toastr.warning(\"Password is required\", \"Warning!\");\r\n    }\r\n    else if(this.email.hasError('email')){\r\n      this.toastr.warning(\"Not a valid email\", \"Warning!\");\r\n\r\n    }\r\n    else {      \r\n      let data = {\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n        mobileNumber: `${this.countryCode} ${this.mobileNumber}`,\r\n        email: this.email.value,\r\n        password: this.password,\r\n        countryName: this.countryName,\r\n      }\r\n\r\n      //console.log(data)  \r\n      this.appService.signUp(data)\r\n        .subscribe((apiResponse) => {\r\n\r\n          if (apiResponse.status == 200) {\r\n            this.toastr.success(\"Please check your email\", \"Registered with ToDo\");\r\n            setTimeout(() => {\r\n              this.goToSignIn();\r\n            }, 1000);//redirecting to signIn page\r\n\r\n          }\r\n          else {\r\n            this.toastr.error(apiResponse.message, \"Error!\");\r\n          }\r\n        },\r\n          (error) => {\r\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\r\n            this.router.navigate(['/serverError']);\r\n          });//end calling signUpFunction\r\n    }\r\n  }//end signUp function\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n \r\n  { path: 'login', component: LoginComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  { path: 'verify-email/:userId', component: VerifyEmailComponent },\r\n  { path: 'reset-password/:validationToken', component: ResetPasswordComponent },\r\n  \r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n\r\n  declarations: []\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n/* modules from Materialize */\r\n\r\nimport {MatFormFieldModule,MatIconModule,MatInputModule,MatSelectModule,MatRadioModule,MatButtonModule,MatCheckboxModule,MatTooltipModule  } from '@angular/material';\r\n\r\n/* Module for Toaster */\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n\r\n    UserRoutingModule,\r\n  ],\r\n  \r\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent, VerifyEmailComponent, ResetPasswordComponent],\r\n})\r\nexport class UserModule { }\r\n\r\n","module.exports = \"body, html {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .bg-image { \\r\\n    /* The image used */\\r\\n    background-image: url('background-image.jpg');\\r\\n  \\r\\n    /* Full height */\\r\\n    height: 100vh; \\r\\n  \\r\\n    /* Center and scale the image nicely */\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"full-screen container-fluid bg-orange\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto col-sm-6 text-center\\\">\\r\\n            <div class=\\\"card border-info cardBorder\\\">\\r\\n\\r\\n\\r\\n                <div  class=\\\"card-body text-center \\\">\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <img class=\\\"logo-app\\\" src=\\\"./../../../assets/images/todoapplogo.png\\\" alt=\\\"TodoApp Logo\\\" />\\r\\n                        <div>\\r\\n                            <h5>{{message}}</h5>\\r\\n                        </div>\\r\\n                        <div class=\\\"links-wrap\\\">\\r\\n                            <a class=\\\"button btn btn-primary\\\" mat-raised-link [routerLink]=\\\"['/user/login']\\\">Sign In</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <br>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppService } from '../../app.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css']\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  public userId:string;\r\n  public message: string;\r\n\r\n  constructor(\r\n    public appService: AppService,\r\n    public _route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this._route.snapshot.paramMap.get('userId');\r\n    this.verifyEmailFunction()\r\n  }\r\n\r\n  public verifyEmailFunction(): any {\r\n\r\n      this.appService.verifyEmail(this.userId).subscribe((apiResponse) => {\r\n\r\n          if (apiResponse.status == 200) {\r\n            this.toastr.success(\"Please login\", \"Email Verified!\");\r\n            this.message = \"Your account has been activated. You can login now\"\r\n          }\r\n          else {\r\n            this.toastr.error(apiResponse.message, \"Error!\");\r\n\r\n          }\r\n        },\r\n          (error) => {\r\n            if(error.status == 404){\r\n              this.toastr.warning(\"Email Verification failed\", \"User Not Found!\");\r\n              this.message = \"Email Verification failed\"\r\n\r\n            }\r\n            else{\r\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\r\n              this.router.navigate(['/serverError']);\r\n  \r\n            }\r\n              \r\n          });//end calling verifyEmail\r\n    \r\n  }//end verifyEmailFunction\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}